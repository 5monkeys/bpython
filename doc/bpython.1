.\"                                      Hey, EMACS: -*- nroff -*-
.\" First parameter, NAME, should be all caps
.\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
.\" other parameters are allowed: see man(7), man(1)
.TH BPYTHON 1 "September 21, 2009"
.\" Please adjust this date whenever revising the manpage.
.\"
.\" Some roff macros, for reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify to both left and right margins
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        insert line break
.\" .sp <n>    insert n+1 empty lines
.\" for manpage-specific macros, see man(7)
.SH NAME
bpython \- a fancy curses interface to the Python interactive interpreter
.SH SYNOPSIS
.B bpython
[\fIoptions\fR] [\fIfile\fR [\fIargs\fR]]
.SH DESCRIPTION
The idea is to provide the user with all the features
in\-line, much like modern IDEs, but in a simple,
lightweight package that can be run in a terminal
window.

.B * In\-line syntax highlighting.
.RS
Hilights commands as you type!
.RE
.B * Readline\-like autocomplete with suggestions displayed as you type.
.RS
Press tab to complete expressions when there's only one suggestion.
.RE
.B * Expected parameter list.
.RS
This displays a list of parameters for any function you call. It uses the inspect module, then tries pydoc.
.RE
.B * Rewind.
.RS
This is a bit misleading, but it code that has been entered is remembered, and when you Rewind, it pops the last line and re\-evaluates the entire code. This is error\-prone, and mostly useful for defining classes and functions. 
.RE
.B * Pastebin code/write to file.
.RS
This posts the current buffer to a pastebin (paste.pocoo.org) or writes it to a file.
.RE
.B * Flush curses screen to stdout.
.RS
Unlike other curses apps, bpython dumps the screen data to stdout when you quit, so you see what you've done in the buffer of your terminal.
.RE

.SH OPTIONS
The long and short forms of options, shown here as alternatives, are
equivalent. If bpython sees an argument it does not know, execution falls
back to the regular Python interpreter.
.IP "\fB\-\-config=\fR\fIconfig\fR" 4
.PD
Use \fIconfig\fR instead of default config file.
.IP "\fB\-h\fR" 4
.PD 0
.IP "\fB\-\-help\fR" 4
.PD
Show the help message and exit.
.IP "\fB\-i\fR" 4
.PD 0
.IP "\fB\-\-interactive\fR" 4
.PD
Drop to bpython shell after running \fIfile\fR instead of exiting.
The PYTHONSTARTUP file is not read.
.IP "\fB\-q\fR" 4
.PD 0
.IP "\fB\-\-quiet\fR" 4
.PD
Do not flush the output to stdout.
.IP "\fB\-V\fR" 4
.PD 0
.IP "\fB\-\-version\fR" 4
.PD
Print bpython's version and exit.

.SH KEYS
bpython's keys are fully configurable. See
http://docs.bpython-interpreter.org/configuration.html#keyboard

.SH FILES
~/.bpython/config
.RS
Your bpython config. See sample-config (in /usr/share/doc/bpython/examples on Debian) for various options you can use, or read
.BR bpython-config (5)
 .
.RE

.SH KNOWN BUGS
See http://bitbucket.org/bobf/bpython/issues/ for a list of known issues.

.SH SEE ALSO
.BR bpython-config (5),
.BR python (1).

.SH AUTHOR
bpython was written by Robert Anthony Farrell <robertanthonyfarrel@gmail.com> and his bunch of loyal followers.
.PP
This manual page was written by Jørgen Pedersen Tjernø <jorgen@devsoft.no>,
for the Debian project (but may be used by others).
